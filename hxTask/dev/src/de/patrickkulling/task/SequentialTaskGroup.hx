package de.patrickkulling.task;class SequentialTaskGroup extends Task{	private var tasks:Array<Task>;	public function new()	{		super();		tasks = [];	}	public function add(task:Task):Void	{		tasks.push(task);	}	public function count():Int	{		return tasks.length;	}	public override function doStart():Void	{		nextTask();	}	private function nextTask():Void	{		if (count() > 0)		{			var task:Task = tasks.shift();			task.completeSignal.bind(handleTaskComplete);			task.start();		}		else		{			complete();		}	}	private function handleTaskComplete(task:Task):Void	{		task.completeSignal.unbind(handleTaskComplete);		nextTask();	}}